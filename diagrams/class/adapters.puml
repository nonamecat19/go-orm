@startuml

skinparam style strictuml
skinparam padding 0
'skinparam nodesep 200
'skinparam ranksep 200
'skinparam linetype ortho

package adapters {
    package adapter_base {
        class AdapterBase << (S,Aquamarine) >> {
            + DeleteFromTable(tableName string) string
            + Insert(tableName string, fieldNames []string, values []any, args []any) (string, []any)
            + GetConnString(config config.ORMConfig) string
            + GetDbDriver() string
            + PrepareOrderBy(query string, orderBy []string) string
            + PrepareWhere(query string, where string) string
            + PrepareLimit(query string, limit int) string
            + PrepareOffset(query string, offset int) string
            + PrepareSet(query string, set map[string]any, args []any) (string, []any)
            + PrepareJoins(query string, joins []query.JoinClause) string
            + PrepareQueryAndArgs(query string, args []any) (string, []any)
            + GetFromSubquery(tableName string, where string, orderBy []string, limit int, offset int) string
            + GetReadQuery(tableName string, fields []string, fromSubquery string) string
            + GetSelectQuery(selectValue string, fromValue string) string
            + GetSelectWhereIn(tableName string, selectValue string, fieldName string, fieldValues []string) string
            + Update(tableName string) string
            + JoinFieldsStrictly(fields []string) string
            + JoinFields(fields []string) string
            + NormalizeSqlWithArgs(sql string, args []any) string
            + Where(condition string, args []any) string
            + AndWhere(condition string, where string, args []any) string
            + OrWhere(condition string, where string, args []any) string
        }
    }

    package adapter_mssql {
        class AdapterMSSQL << (S,Aquamarine) >> {
            + GetConnString(config config.ORMConfig) string
            + GetDbDriver() string
            + PrepareLimit(query string, limit int) string
            + PrepareOffset(query string, offset int) string
            + PrepareQueryAndArgs(query string, args []any) (string, []any)
            + GetFromSubquery(tableName string, where string, orderBy []string, limit int, offset int) string
            + NormalizeSqlWithArgs(sql string, args []any) string
            + Where(condition string, args []any) string
            + AndWhere(condition string, where string, args []any) string
            + OrWhere(condition string, where string, args []any) string
        }
        adapters.adapter_mssql.AdapterMSSQL -[norank]-|> adapters.adapter_base.AdapterBase
    }

    package adapter_mysql {
        class AdapterMySQL << (S,Aquamarine) >> {
            + GetConnString(config config.ORMConfig) string
            + GetDbDriver() string
            + Where(condition string, args []any) string
            + AndWhere(condition string, where string, args []any) string
            + OrWhere(condition string, where string, args []any) string
        }
        adapters.adapter_mysql.AdapterMySQL --|> adapters.adapter_base.AdapterBase
    }

    package adapter_postgres {
        class AdapterPostgres << (S,Aquamarine) >> {
            + GetConnString(config config.ORMConfig) string
            + GetDbDriver() string
        }
        adapters.adapter_postgres.AdapterPostgres --|> adapters.adapter_base.AdapterBase
    }

    package adapter_sqlite {
        class AdapterSQLite << (S,Aquamarine) >> {
            + GetConnString(config config.ORMConfig) string
            + GetDbDriver() string
        }
        adapters.adapter_sqlite.AdapterSQLite --|> adapters.adapter_base.AdapterBase
    }
}


@enduml