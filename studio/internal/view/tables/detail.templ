package tables

import (
	"context"
	"fmt"
	"github.com/nonamecat19/go-orm/studio/internal/view/components"
	"github.com/nonamecat19/go-orm/studio/internal/view/layout"
	"io"
)

type TableDetailProps struct {
	Table  Table
	Data   [][]string
	Fields []string
}

templ TableDetailPage(props TableDetailProps) {
	@layout.Base(layout.BaseProps{Title: props.Table.Title}) {
		@layout.VerticalContainer() {
			@layout.HorizontalContainer() {
				@TableNavigationSection()
				@TableInfoSection(props.Table.Title, props.Table.ID)
				@TableEditSection()
			}
			@TableViewSection(props.Fields, props.Data)
		}
	}
}

templ TableNavigationSection() {
	@layout.SectionContainer() {
		@components.ReturnBack()
	}
}

templ TableInfoSection(title string, id string) {
	@layout.SectionContainer() {
		<h1>{ title } ID: { id }</h1>
	}
}

templ TableEditSection() {
	@layout.SectionContainer() {
		@layout.HorizontalContainer() {
			@components.AddRecord(components.AddRecordProps{})
			@components.RefreshButton()
		}
	}
}

templ TableViewSection(fields []string, data [][]string) {
	@layout.SectionContainer() {
		<div class="overflow-x-auto">
			<table class="table table-zebra">
				<thead>
					<tr>
						for _, field := range fields {
							<th>{ field }</th>
						}
						<th></th>
					</tr>
				</thead>
				<tbody>
					for rowIndex, row := range data {
						<tr>
							for fieldIndex, field := range row {
								<td>
									@components.Modal(components.ModalProps{
										Trigger: templ.Component(func() templ.Component {
											return templ.ComponentFunc(func(ctx context.Context, w io.Writer) error {
												return templ.Raw(`<div>`+field+`</div>`).Render(ctx, w)
											})
										}()),
									
										ModalTitle: "Hello",
										Key:        fmt.Sprintf("tableEdit_%d_%d", rowIndex, fieldIndex),
									}) {
										<p class="py-4">Press ESC key or click the button below to close</p>
									}
								</td>
							}
							<td>
								@DeleteRowButton()
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	}
}
