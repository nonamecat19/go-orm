// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package themes

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/nonamecat19/go-orm/studio/internal/view/layout"

var themesList = []string{
	"light", "dark", "cupcake", "bumblebee",
	"emerald", "corporate", "synthwave", "retro",
	"cyberpunk", "valentine", "halloween", "garden",
	"forest", "aqua", "lofi", "pastel",
	"fantasy", "wireframe", "black", "luxury",
	"dracula", "cmyk", "autumn", "business",
	"acid", "lemonade", "night", "coffee",
	"winter", "dim", "nord", "sunset",
}

func ThemeChangeSection() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = layout.SectionHeading("Обрати тему").Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, " <div id=\"themeContainer\" class=\"rounded-box grid grid-cols-2 gap-4 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, theme := range themesList {
				templ_7745c5c3_Err = ThemeItem(theme).Render(ctx, templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = layout.SectionContainer().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<script>\n\t\tfunction applyTheme(theme) {\n\t\t\tdocument.documentElement.setAttribute(\"data-theme\", theme);\n\t\t\tlocalStorage.setItem(\"selectedTheme\", theme);\n\t\t}\n\n\t\tfunction initThemeHandling() {\n\t\t\tconst savedTheme = localStorage.getItem(\"selectedTheme\");\n\t\t\tif (savedTheme) {\n\t\t\t\tapplyTheme(savedTheme);\n\t\t\t\tconst radio = document.querySelector(`input[name=\"theme\"][value=\"${savedTheme}\"]`);\n\t\t\t\tif (radio) radio.checked = true;\n\t\t\t}\n\n\t\t\tdocument.querySelectorAll('input[name=\"theme\"]').forEach(radio => {\n\t\t\t\tradio.addEventListener(\"change\", () => {\n\t\t\t\t\tif (radio.checked) {\n\t\t\t\t\t\tapplyTheme(radio.value);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tdocument.addEventListener(\"DOMContentLoaded\", initThemeHandling);\n\t\tdocument.body.addEventListener(\"htmx:afterSettle\", initThemeHandling);\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
